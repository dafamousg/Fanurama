{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport let FuturamaAPIService = /*#__PURE__*/(() => {\n  class FuturamaAPIService {\n    //New(Current) API\n    //apiUrl:string = 'https://sampleapis.com/futurama/api/characters';\n    constructor(http) {\n      this.http = http; //Old API not in use\n\n      this.apiUrl = 'https://futuramaapi.herokuapp.com/api/';\n      this.AllCharactersLink = 'v2/characters';\n      this.pageLink = '?page=';\n      this.sampleAPI = 'https://api.sampleapis.com/futurama/';\n      this.episodeLink = 'episodes';\n      this.questionsLink = 'questions';\n      this.pageNum = 1;\n      this.previousResponse = [];\n      this.getObj = {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        }\n      };\n    }\n\n    getAllEpisodes() {\n      return this.http.get(`${this.sampleAPI}${this.episodeLink}`);\n    }\n\n    combinedObservable() {\n      return __awaiter(this, void 0, void 0, function* () {\n        let characterCall = yield fetch(this.apiUrl + this.AllCharactersLink + this.pageLink + this.pageNum, this.getObj).then(res => res.json()).then(data => {\n          const response = [...this.previousResponse, ...data];\n\n          if (data.length > 0) {\n            ++this.pageNum;\n            this.previousResponse = response;\n            return this.combinedObservable();\n          }\n\n          return response;\n        });\n        return characterCall;\n      });\n    }\n\n    getQuiz() {\n      return this.http.get(`${this.sampleAPI}${this.questionsLink}`);\n    }\n\n  }\n\n  FuturamaAPIService.ɵfac = function FuturamaAPIService_Factory(t) {\n    return new (t || FuturamaAPIService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  FuturamaAPIService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FuturamaAPIService,\n    factory: FuturamaAPIService.ɵfac,\n    providedIn: 'root'\n  });\n  return FuturamaAPIService;\n})();","map":null,"metadata":{},"sourceType":"module"}